{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\components\\\\todo-item\\\\Todo-item-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { TodoItem } from \"./Todo-item\";\nimport { setNewTodo, deleteTodo, updateTodoDone, updateTodoImportant } from \"../../store/todo-list/actions\";\n\nclass TodoItemContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDone = key => {\n      const [todo] = this.props.todoList.filter(todo => todo.key === key);\n      if (todo) this.props.updateTodoDone({ ...todo,\n        done: !todo.done\n      }, todo.key);\n      axios.post('http://localhost:5000/todo-list/update/done', todo).then(res => console.log(res.data)).catch(err => console.log(err.message));\n    };\n\n    this.handleImportant = key => {\n      const [todo] = this.props.todoList.filter(todo => todo.key === key);\n      if (todo) this.props.updateTodoImportant({ ...todo,\n        important: !todo.important\n      }, todo.key);\n      axios.post('http://localhost:5000/todo-list/update/important', todo).then(res => console.log(res.data)).catch(err => console.log(err.message));\n    };\n\n    this.handleDelete = key => {\n      axios.delete('http://localhost:5000/todo-list/' + key).then(res => console.log(res.data));\n      const todo = this.props.todoList.filter(todo => todo.key !== key);\n      this.props.deleteTodo(todo);\n    };\n  }\n\n  render() {\n    const {\n      todo: {\n        label,\n        important,\n        done,\n        key,\n        todoCreatedAt\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(TodoItem, {\n      label: label,\n      keyID: key,\n      done: done,\n      important: important,\n      createdAt: todoCreatedAt,\n      onClickDone: this.handleDone,\n      onClickDelete: this.handleDelete,\n      onClickImportant: this.handleImportant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  deleteTodo,\n  updateTodoDone,\n  updateTodoImportant\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/components/todo-item/Todo-item-container.js"],"names":["React","Component","connect","axios","TodoItem","setNewTodo","deleteTodo","updateTodoDone","updateTodoImportant","TodoItemContainer","handleDone","key","todo","props","todoList","filter","done","post","then","res","console","log","data","catch","err","message","handleImportant","important","handleDelete","delete","render","label","todoCreatedAt","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {TodoItem} from \"./Todo-item\";\r\nimport {setNewTodo, deleteTodo, updateTodoDone, updateTodoImportant} from \"../../store/todo-list/actions\";\r\n\r\nclass TodoItemContainer extends Component {\r\n    handleDone = key => {\r\n        const [todo] = this.props.todoList.filter(todo => todo.key === key);\r\n        if (todo) this.props.updateTodoDone({...todo, done: !todo.done}, todo.key);\r\n\r\n        axios.post('http://localhost:5000/todo-list/update/done', todo)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err.message))\r\n    };\r\n\r\n    handleImportant = key => {\r\n        const [todo] = this.props.todoList.filter(todo => todo.key === key);\r\n        if (todo) this.props.updateTodoImportant({...todo, important: !todo.important}, todo.key);\r\n\r\n        axios.post('http://localhost:5000/todo-list/update/important', todo)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err.message))\r\n    };\r\n\r\n    handleDelete = key => {\r\n        axios.delete('http://localhost:5000/todo-list/' + key)\r\n            .then(res => console.log(res.data));\r\n\r\n        const todo = this.props.todoList.filter(todo => todo.key !== key);\r\n\r\n        this.props.deleteTodo(todo);\r\n    };\r\n\r\n    render() {\r\n        const {todo: {label, important, done, key, todoCreatedAt}} = this.props;\r\n        return <TodoItem\r\n            label={label}\r\n            keyID={key}\r\n            done={done}\r\n            important={important}\r\n            createdAt={todoCreatedAt}\r\n            onClickDone={this.handleDone}\r\n            onClickDelete={this.handleDelete}\r\n            onClickImportant={this.handleImportant}\r\n        />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    deleteTodo,\r\n    updateTodoDone,\r\n    updateTodoImportant\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);"]},"metadata":{},"sourceType":"module"}