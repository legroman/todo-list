{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\components\\\\register-form\\\\Register-form-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { RegisterForm } from \"./Register-form\";\nimport { setNewTodo } from \"../../store/todo-list/actions\";\nimport { setRegisterForm } from \"../../store/register-form/actions\";\nimport { updateTodoLabel } from \"../../store/todo-list/actions\";\n\nclass RegisterFormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setDate = () => {\n      const date = new Date();\n      const day = date.getDay() < 10 ? `0${date.getDay()}` : date.getDay();\n      const month = date.getMonth() < 10 ? `0${date.getMonth()}` : date.getMonth();\n      const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n      const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n      return `${day}-${month}-${date.getFullYear()} ${hours}:${minutes}`;\n    };\n\n    this.handleChange = event => this.props.setRegisterForm(event);\n\n    this.handleSubmit = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        if (this.props.updateKey) {\n          const [todo] = this.props.todoList.filter(todo => todo.key === this.props.updateKey);\n          if (todo) this.props.updateTodoLabel({ ...todo,\n            label: this.props.form\n          }, todo.key); // axios.post('/api/todo-list/update/label', todo)\n          //     .then(res => console.log(res.data))\n          //     .catch(err => console.log(err.message));\n\n          return;\n        }\n\n        const newTodo = {\n          label: this.props.form,\n          important: false,\n          done: false,\n          todoCreatedAt: this.setDate(),\n          key: Date.now()\n        };\n        if (this.props.form) this.props.setNewTodo(newTodo);\n        this.props.setRegisterForm('');\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        axios.post('/api/todo-list/add', newTodo, {\n          headers: {\n            \"Authorization\": `Bearer ${userData.token}`\n          }\n        }).then(res => console.log(res.data)).catch(err => window.M.toast({\n          html: err.response.data.message\n        }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RegisterForm, {\n      onChangeForm: this.handleChange,\n      onSubmitForm: this.handleSubmit,\n      label: this.props.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList,\n    form: state.TodoForm.label,\n    updateKey: state.TodoForm.updateKey\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  setRegisterForm,\n  updateTodoLabel\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterFormContainer);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/components/register-form/Register-form-container.js"],"names":["React","Component","connect","axios","RegisterForm","setNewTodo","setRegisterForm","updateTodoLabel","RegisterFormContainer","setDate","date","Date","day","getDay","month","getMonth","hours","getHours","minutes","getMinutes","getFullYear","handleChange","event","props","handleSubmit","key","preventDefault","updateKey","todo","todoList","filter","label","form","newTodo","important","done","todoCreatedAt","now","userData","JSON","parse","localStorage","getItem","post","headers","token","then","res","console","log","data","catch","err","window","M","toast","html","response","message","render","mapStateToProps","state","TodoForm","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,SAAQC,eAAR,QAA8B,mCAA9B;AACA,SAAQC,eAAR,QAA8B,+BAA9B;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAC1CQ,OAD0C,GAChC,MAAM;AACZ,YAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,YAAMC,GAAG,GAAGF,IAAI,CAACG,MAAL,KAAgB,EAAhB,GAAsB,IAAGH,IAAI,CAACG,MAAL,EAAc,EAAvC,GAA0CH,IAAI,CAACG,MAAL,EAAtD;AACA,YAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,EAAlB,GAAwB,IAAGL,IAAI,CAACK,QAAL,EAAgB,EAA3C,GAA8CL,IAAI,CAACK,QAAL,EAA5D;AACA,YAAMC,KAAK,GAAGN,IAAI,CAACO,QAAL,KAAkB,EAAlB,GAAwB,IAAGP,IAAI,CAACO,QAAL,EAAgB,EAA3C,GAA8CP,IAAI,CAACO,QAAL,EAA5D;AACA,YAAMC,OAAO,GAAGR,IAAI,CAACS,UAAL,KAAoB,EAApB,GAA0B,IAAGT,IAAI,CAACS,UAAL,EAAkB,EAA/C,GAAkDT,IAAI,CAACS,UAAL,EAAlE;AACA,aAAQ,GAAEP,GAAI,IAAGE,KAAM,IAAGJ,IAAI,CAACU,WAAL,EAAmB,IAAGJ,KAAM,IAAGE,OAAQ,EAAjE;AACH,KARyC;;AAAA,SAU1CG,YAV0C,GAU3BC,KAAK,IAAI,KAAKC,KAAL,CAAWjB,eAAX,CAA2BgB,KAA3B,CAVkB;;AAAA,SAY1CE,YAZ0C,GAY3BF,KAAK,IAAI;AACpB,UAAIA,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACvBH,QAAAA,KAAK,CAACI,cAAN;;AAGA,YAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACtB,gBAAM,CAACC,IAAD,IAAS,KAAKL,KAAL,CAAWM,QAAX,CAAoBC,MAApB,CAA2BF,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAa,KAAKF,KAAL,CAAWI,SAA3D,CAAf;AACA,cAAIC,IAAJ,EAAU,KAAKL,KAAL,CAAWhB,eAAX,CAA2B,EAAC,GAAGqB,IAAJ;AAAUG,YAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS;AAA5B,WAA3B,EAA8DJ,IAAI,CAACH,GAAnE,EAFY,CAGtB;AACA;AACA;;AACA;AACH;;AAED,cAAMQ,OAAO,GAAG;AACZF,UAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWS,IADN;AAEZE,UAAAA,SAAS,EAAE,KAFC;AAGZC,UAAAA,IAAI,EAAE,KAHM;AAIZC,UAAAA,aAAa,EAAE,KAAK3B,OAAL,EAJH;AAKZgB,UAAAA,GAAG,EAAEd,IAAI,CAAC0B,GAAL;AALO,SAAhB;AAQA,YAAI,KAAKd,KAAL,CAAWS,IAAf,EAAqB,KAAKT,KAAL,CAAWlB,UAAX,CAAsB4B,OAAtB;AAErB,aAAKV,KAAL,CAAWjB,eAAX,CAA2B,EAA3B;AAEA,cAAMgC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AAEAvC,QAAAA,KAAK,CAACwC,IAAN,CAAW,oBAAX,EAAiCV,OAAjC,EAA0C;AAACW,UAAAA,OAAO,EAAE;AAAC,6BAAkB,UAASN,QAAQ,CAACO,KAAM;AAA3C;AAAV,SAA1C,EACKC,IADL,CACUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADjB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,MAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAACC,UAAAA,IAAI,EAAEJ,GAAG,CAACK,QAAJ,CAAaP,IAAb,CAAkBQ;AAAzB,SAAf,CAFlB;AAGH;AACJ,KA5CyC;AAAA;;AA8C1CC,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,YAAD;AACH,MAAA,YAAY,EAAE,KAAKtC,YADhB;AAEH,MAAA,YAAY,EAAE,KAAKG,YAFhB;AAGH,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWS,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKH;;AApDyC;;AAuD9C,MAAM4B,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHhC,IAAAA,QAAQ,EAAEgC,KAAK,CAAChC,QAAN,CAAeA,QADtB;AAEHG,IAAAA,IAAI,EAAE6B,KAAK,CAACC,QAAN,CAAe/B,KAFlB;AAGHJ,IAAAA,SAAS,EAAEkC,KAAK,CAACC,QAAN,CAAenC;AAHvB,GAAP;AAKH,CAND;;AAQA,MAAMoC,kBAAkB,GAAG;AACvB1D,EAAAA,UADuB;AAEvBC,EAAAA,eAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeL,OAAO,CAAC0D,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvD,qBAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {RegisterForm} from \"./Register-form\";\r\nimport {setNewTodo} from \"../../store/todo-list/actions\";\r\nimport {setRegisterForm} from \"../../store/register-form/actions\";\r\nimport {updateTodoLabel} from \"../../store/todo-list/actions\";\r\n\r\nclass RegisterFormContainer extends Component {\r\n    setDate = () => {\r\n        const date = new Date();\r\n        const day = date.getDay() < 10 ? `0${date.getDay()}` :date.getDay();\r\n        const month = date.getMonth() < 10 ? `0${date.getMonth()}` :date.getMonth();\r\n        const hours = date.getHours() < 10 ? `0${date.getHours()}` :date.getHours();\r\n        const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` :date.getMinutes();\r\n        return `${day}-${month}-${date.getFullYear()} ${hours}:${minutes}`\r\n    };\r\n\r\n    handleChange = event => this.props.setRegisterForm(event);\r\n\r\n    handleSubmit = event => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n\r\n\r\n            if (this.props.updateKey) {\r\n                const [todo] = this.props.todoList.filter(todo => todo.key === this.props.updateKey);\r\n                if (todo) this.props.updateTodoLabel({...todo, label: this.props.form}, todo.key);\r\n                // axios.post('/api/todo-list/update/label', todo)\r\n                //     .then(res => console.log(res.data))\r\n                //     .catch(err => console.log(err.message));\r\n                return\r\n            }\r\n\r\n            const newTodo = {\r\n                label: this.props.form,\r\n                important: false,\r\n                done: false,\r\n                todoCreatedAt: this.setDate(),\r\n                key: Date.now()\r\n            };\r\n\r\n            if (this.props.form) this.props.setNewTodo(newTodo);\r\n\r\n            this.props.setRegisterForm('');\r\n\r\n            const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n            axios.post('/api/todo-list/add', newTodo, {headers: {\"Authorization\": `Bearer ${userData.token}`}})\r\n                .then(res => console.log(res.data))\r\n                .catch(err => window.M.toast({html: err.response.data.message}))\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <RegisterForm\r\n            onChangeForm={this.handleChange}\r\n            onSubmitForm={this.handleSubmit}\r\n            label={this.props.form}\r\n        />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n        form: state.TodoForm.label,\r\n        updateKey: state.TodoForm.updateKey\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    setRegisterForm,\r\n    updateTodoLabel\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterFormContainer);"]},"metadata":{},"sourceType":"module"}