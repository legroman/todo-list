{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\test-todo\\\\src\\\\components\\\\todo-list\\\\Todo-list-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TodoList } from \"./Todo-list\";\nimport { fetchTodoList, setNewTodo, deleteTodo } from \"../../store/todo-list/actions\";\n\nclass TodoListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.todoList = () => {\n      const {\n        todoList,\n        term,\n        filter\n      } = this.props;\n\n      switch (filter) {\n        case \"Active\":\n          return todoList.filter(todo => {\n            if (!todo.done && term.trim()) {\n              return todo.label.toLowerCase().indexOf(term) !== -1;\n            } else return !todo.done;\n          });\n\n        case \"Done\":\n          return todoList.filter(todo => {\n            if (todo.done && term.trim()) {\n              return todo.label.toLowerCase().indexOf(term) !== -1;\n            } else return todo.done;\n          });\n\n        case \"Marked\":\n          return todoList.filter(todo => {\n            if (todo.important && term.trim()) {\n              return todo.label.toLowerCase().indexOf(term) !== -1;\n            } else return todo.important;\n          });\n\n        default:\n          return todoList.filter(todo => {\n            if (term.trim()) {\n              return todo.label.toLowerCase().indexOf(term) !== -1;\n            } else return todo;\n          });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(TodoList, {\n      todoList: this.todoList(),\n      isEmpty: !this.props.todoList.length,\n      loader: this.props.loader,\n      alert: this.props.alertText.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList,\n    filter: state.navigation.filter,\n    term: state.searchForm.term,\n    loader: state.loader.loader,\n    alertText: state.alertText.alertText\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  deleteTodo,\n  fetchTodoList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);","map":{"version":3,"sources":["D:/JsReactProjects/test-todo/src/components/todo-list/Todo-list-container.js"],"names":["React","Component","connect","TodoList","fetchTodoList","setNewTodo","deleteTodo","TodoListContainer","todoList","term","filter","props","todo","done","trim","label","toLowerCase","indexOf","important","render","length","loader","alertText","mapStateToProps","state","navigation","searchForm","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {TodoList} from \"./Todo-list\";\r\nimport {fetchTodoList, setNewTodo, deleteTodo} from \"../../store/todo-list/actions\";\r\n\r\nclass TodoListContainer extends Component {\r\n    // componentDidMount = () => this.props.fetchTodoList();\r\n\r\n    todoList = () => {\r\n        const {todoList, term, filter} = this.props;\r\n\r\n        switch (filter) {\r\n            case \"Active\":\r\n                return todoList.filter(todo => {\r\n                    if (!todo.done && term.trim()) {\r\n                        return todo.label.toLowerCase().indexOf(term) !== -1\r\n                    } else\r\n                        return !todo.done;\r\n                });\r\n            case \"Done\":\r\n                return todoList.filter(todo => {\r\n                    if (todo.done && term.trim()) {\r\n                        return todo.label.toLowerCase().indexOf(term) !== -1\r\n                    } else\r\n                        return todo.done;\r\n                });\r\n            case \"Marked\":\r\n                return todoList.filter(todo => {\r\n                    if (todo.important && term.trim()) {\r\n                        return todo.label.toLowerCase().indexOf(term) !== -1\r\n                    } else\r\n                        return todo.important;\r\n                });\r\n            default:\r\n                return todoList.filter(todo => {\r\n                    if (term.trim()) {\r\n                        return todo.label.toLowerCase().indexOf(term) !== -1\r\n                    } else\r\n                        return todo;\r\n                });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <TodoList\r\n            todoList={this.todoList()}\r\n            isEmpty={!this.props.todoList.length}\r\n            loader={this.props.loader}\r\n            alert={this.props.alertText.length}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n        filter: state.navigation.filter,\r\n        term: state.searchForm.term,\r\n        loader: state.loader.loader,\r\n        alertText: state.alertText.alertText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    deleteTodo,\r\n    fetchTodoList\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);"]},"metadata":{},"sourceType":"module"}