{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\components\\\\todo-item\\\\Todo-item-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { TodoItem } from \"./Todo-item\";\nimport { setNewTodo, deleteTodo, updateTodoDone, updateTodoImportant } from \"../../store/todo-list/actions\";\n\nclass TodoItemContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDone = key => {\n      console.log(key);\n      const [todo] = this.props.todoList.filter(todo => todo.key === key);\n      if (todo) this.props.updateTodoDone({ ...todo,\n        done: !todo.done\n      }, todo.key);\n    };\n\n    this.handleImportant = key => {\n      const [todo] = this.props.todoList.filter(todo => todo.key === key);\n      if (todo) this.props.updateTodoImportant({ ...todo,\n        important: !todo.important\n      }, todo.key);\n    };\n\n    this.handleDelete = key => {\n      axios.delete('http://localhost:5000/todo-list/' + key).then(res => console.log(res.data));\n      const todo = this.props.todoList.filter(todo => todo.key !== key);\n      this.props.deleteTodo(todo);\n    };\n  }\n\n  render() {\n    const {\n      todo: {\n        label,\n        important,\n        done,\n        key\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(TodoItem, {\n      label: label,\n      key: key,\n      done: done,\n      important: important,\n      onClickDone: this.handleDone,\n      onClickDelete: this.handleDelete,\n      onClickImportant: this.handleImportant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  deleteTodo,\n  updateTodoDone,\n  updateTodoImportant\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/components/todo-item/Todo-item-container.js"],"names":["React","Component","connect","axios","TodoItem","setNewTodo","deleteTodo","updateTodoDone","updateTodoImportant","TodoItemContainer","handleDone","key","console","log","todo","props","todoList","filter","done","handleImportant","important","handleDelete","delete","then","res","data","render","label","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,EAAoBC,UAApB,EAAgCC,cAAhC,EAAgDC,mBAAhD,QAA0E,+BAA1E;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCS,UADsC,GACzBC,GAAG,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,CAACG,IAAD,IAAS,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BH,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaA,GAAhD,CAAf;AACA,UAAIG,IAAJ,EAAU,KAAKC,KAAL,CAAWR,cAAX,CAA0B,EAAC,GAAGO,IAAJ;AAAUI,QAAAA,IAAI,EAAE,CAACJ,IAAI,CAACI;AAAtB,OAA1B,EAAuDJ,IAAI,CAACH,GAA5D;AACb,KALqC;;AAAA,SAOtCQ,eAPsC,GAOpBR,GAAG,IAAI;AACrB,YAAM,CAACG,IAAD,IAAS,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BH,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaA,GAAhD,CAAf;AACA,UAAIG,IAAJ,EAAU,KAAKC,KAAL,CAAWP,mBAAX,CAA+B,EAAC,GAAGM,IAAJ;AAAUM,QAAAA,SAAS,EAAE,CAACN,IAAI,CAACM;AAA3B,OAA/B,EAAsEN,IAAI,CAACH,GAA3E;AACb,KAVqC;;AAAA,SAYtCU,YAZsC,GAYvBV,GAAG,IAAI;AAClBR,MAAAA,KAAK,CAACmB,MAAN,CAAa,qCAAqCX,GAAlD,EACKY,IADL,CACUC,GAAG,IAAIZ,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,IAAhB,CADjB;AAGA,YAAMX,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BH,IAAI,IAAIA,IAAI,CAACH,GAAL,KAAaA,GAAhD,CAAb;AAEA,WAAKI,KAAL,CAAWT,UAAX,CAAsBQ,IAAtB;AACH,KAnBqC;AAAA;;AAqBtCY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,IAAI,EAAE;AAACa,QAAAA,KAAD;AAAQP,QAAAA,SAAR;AAAmBF,QAAAA,IAAnB;AAAyBP,QAAAA;AAAzB;AAAP,QAAwC,KAAKI,KAAnD;AAEA,wBAAO,oBAAC,QAAD;AACH,MAAA,KAAK,EAAEY,KADJ;AAEH,MAAA,GAAG,EAAEhB,GAFF;AAGH,MAAA,IAAI,EAAEO,IAHH;AAIH,MAAA,SAAS,EAAEE,SAJR;AAKH,MAAA,WAAW,EAAE,KAAKV,UALf;AAMH,MAAA,aAAa,EAAE,KAAKW,YANjB;AAOH,MAAA,gBAAgB,EAAE,KAAKF,eAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH;;AAjCqC;;AAoC1C,MAAMS,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHb,IAAAA,QAAQ,EAAEa,KAAK,CAACb,QAAN,CAAeA;AADtB,GAAP;AAGH,CAJD;;AAMA,MAAMc,kBAAkB,GAAG;AACvBzB,EAAAA,UADuB;AAEvBC,EAAAA,UAFuB;AAGvBC,EAAAA,cAHuB;AAIvBC,EAAAA;AAJuB,CAA3B;AAOA,eAAeN,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,iBAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {TodoItem} from \"./Todo-item\";\r\nimport {setNewTodo, deleteTodo, updateTodoDone, updateTodoImportant} from \"../../store/todo-list/actions\";\r\n\r\nclass TodoItemContainer extends Component {\r\n    handleDone = key => {\r\n        console.log(key);\r\n        const [todo] = this.props.todoList.filter(todo => todo.key === key);\r\n        if (todo) this.props.updateTodoDone({...todo, done: !todo.done}, todo.key);\r\n    };\r\n\r\n    handleImportant = key => {\r\n        const [todo] = this.props.todoList.filter(todo => todo.key === key);\r\n        if (todo) this.props.updateTodoImportant({...todo, important: !todo.important}, todo.key);\r\n    };\r\n\r\n    handleDelete = key => {\r\n        axios.delete('http://localhost:5000/todo-list/' + key)\r\n            .then(res => console.log(res.data));\r\n\r\n        const todo = this.props.todoList.filter(todo => todo.key !== key);\r\n\r\n        this.props.deleteTodo(todo);\r\n    };\r\n\r\n    render() {\r\n        const {todo: {label, important, done, key}} = this.props;\r\n\r\n        return <TodoItem\r\n            label={label}\r\n            key={key}\r\n            done={done}\r\n            important={important}\r\n            onClickDone={this.handleDone}\r\n            onClickDelete={this.handleDelete}\r\n            onClickImportant={this.handleImportant}\r\n        />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    deleteTodo,\r\n    updateTodoDone,\r\n    updateTodoImportant\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);"]},"metadata":{},"sourceType":"module"}