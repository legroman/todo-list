{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\pages\\\\auth\\\\Register-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Register } from \"./Register\";\nimport { setUsername, setPassword, setConfirmPassword } from \"../../store/auth-register/actions\";\n\nclass RegisterContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChangeUsername = event => this.props.setUsername(event);\n\n    this.handleChangePassword = event => this.props.setPassword(event);\n\n    this.handleChangeConfirmPassword = event => this.props.setConfirmPassword(event);\n\n    this.handleOnSubmit = event => {\n      const {\n        username,\n        password,\n        confirmPassword\n      } = this.props.singUp; // event.preventDefault();\n\n      if (username.length && password.length && password === confirmPassword) {\n        const newUser = {\n          username,\n          password\n        };\n        axios.post('http://localhost:5000/register', newUser).then(res => console.log(res.data));\n        this.props.setUsername(\"\");\n        this.props.setPassword(\"\");\n        this.props.setConfirmPassword(\"\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      confirmPassword\n    } = this.props.singUp;\n    return /*#__PURE__*/React.createElement(Register, {\n      username: username,\n      password: password,\n      confirmPassword: confirmPassword,\n      onSubmitForm: this.handleOnSubmit,\n      onchangeUser: this.handleChangeUsername,\n      onchangePassword: this.handleChangePassword,\n      onchangeConfirmPassword: this.handleChangeConfirmPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    singUp: state.singUp\n  };\n};\n\nconst mapDispatchToProps = {\n  setUsername,\n  setPassword,\n  setConfirmPassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/pages/auth/Register-container.js"],"names":["React","Component","connect","axios","Register","setUsername","setPassword","setConfirmPassword","RegisterContainer","handleChangeUsername","event","props","handleChangePassword","handleChangeConfirmPassword","handleOnSubmit","username","password","confirmPassword","singUp","length","newUser","post","then","res","console","log","data","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,WAAR,EAAqBC,WAArB,EAAkCC,kBAAlC,QAA2D,mCAA3D;;AAEA,MAAMC,iBAAN,SAAgCP,SAAhC,CAAyC;AAAA;AAAA;;AAAA,SACrCQ,oBADqC,GACdC,KAAK,IAAI,KAAKC,KAAL,CAAWN,WAAX,CAAuBK,KAAvB,CADK;;AAAA,SAErCE,oBAFqC,GAEdF,KAAK,IAAI,KAAKC,KAAL,CAAWL,WAAX,CAAuBI,KAAvB,CAFK;;AAAA,SAGrCG,2BAHqC,GAGPH,KAAK,IAAI,KAAKC,KAAL,CAAWJ,kBAAX,CAA8BG,KAA9B,CAHF;;AAAA,SAKrCI,cALqC,GAKpBJ,KAAK,IAAI;AACtB,YAAM;AAACK,QAAAA,QAAD;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA;AAArB,UAAwC,KAAKN,KAAL,CAAWO,MAAzD,CADsB,CAEtB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,IAAmBH,QAAQ,CAACG,MAA5B,IAAsCH,QAAQ,KAAKC,eAAvD,EAAwE;AACpE,cAAMG,OAAO,GAAG;AAACL,UAAAA,QAAD;AAAWC,UAAAA;AAAX,SAAhB;AAEAb,QAAAA,KAAK,CAACkB,IAAN,CAAW,gCAAX,EAA6CD,OAA7C,EACKE,IADL,CACUC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADjB;AAGA,aAAKf,KAAL,CAAWN,WAAX,CAAuB,EAAvB;AACA,aAAKM,KAAL,CAAWL,WAAX,CAAuB,EAAvB;AACA,aAAKK,KAAL,CAAWJ,kBAAX,CAA8B,EAA9B;AACH;AACJ,KAnBoC;AAAA;;AAqBrCoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACZ,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA;AAArB,QAAwC,KAAKN,KAAL,CAAWO,MAAzD;AACA,wBAAO,oBAAC,QAAD;AACH,MAAA,QAAQ,EAAEH,QADP;AAEH,MAAA,QAAQ,EAAEC,QAFP;AAGH,MAAA,eAAe,EAAEC,eAHd;AAIH,MAAA,YAAY,EAAE,KAAKH,cAJhB;AAKH,MAAA,YAAY,EAAE,KAAKL,oBALhB;AAMH,MAAA,gBAAgB,EAAE,KAAKG,oBANpB;AAOH,MAAA,uBAAuB,EAAE,KAAKC,2BAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AASH;;AAhCoC;;AAmCzC,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHX,IAAAA,MAAM,EAAEW,KAAK,CAACX;AADX,GAAP;AAGH,CAJD;;AAMA,MAAMY,kBAAkB,GAAG;AACvBzB,EAAAA,WADuB;AAEvBC,EAAAA,WAFuB;AAGvBC,EAAAA;AAHuB,CAA3B;AAMA,eAAeL,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtB,iBAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {Register} from \"./Register\";\r\nimport {setUsername, setPassword, setConfirmPassword} from \"../../store/auth-register/actions\";\r\n\r\nclass RegisterContainer extends Component{\r\n    handleChangeUsername = event => this.props.setUsername(event);\r\n    handleChangePassword = event => this.props.setPassword(event);\r\n    handleChangeConfirmPassword = event => this.props.setConfirmPassword(event);\r\n\r\n    handleOnSubmit = event => {\r\n        const {username, password, confirmPassword} = this.props.singUp;\r\n        // event.preventDefault();\r\n\r\n        if (username.length && password.length && password === confirmPassword) {\r\n            const newUser = {username, password};\r\n\r\n            axios.post('http://localhost:5000/register', newUser)\r\n                .then(res => console.log(res.data));\r\n\r\n            this.props.setUsername(\"\");\r\n            this.props.setPassword(\"\");\r\n            this.props.setConfirmPassword(\"\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {username, password, confirmPassword} = this.props.singUp;\r\n        return <Register\r\n            username={username}\r\n            password={password}\r\n            confirmPassword={confirmPassword}\r\n            onSubmitForm={this.handleOnSubmit}\r\n            onchangeUser={this.handleChangeUsername}\r\n            onchangePassword={this.handleChangePassword}\r\n            onchangeConfirmPassword={this.handleChangeConfirmPassword}\r\n        />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        singUp: state.singUp\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setUsername,\r\n    setPassword,\r\n    setConfirmPassword\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);"]},"metadata":{},"sourceType":"module"}