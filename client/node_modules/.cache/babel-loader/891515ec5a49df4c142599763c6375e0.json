{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FETCH_TODO_LIST, REQUEST_TODO_LIST } from \"../../store/types\";\nimport { hideLoader, showLoader } from \"../loader/actions\";\nimport { showAlert } from \"../alert/actions\";\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_TODO_LIST, sagaWorker);\n}\n\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader(true));\n    const payload = yield call(fetchTodoList);\n    yield put({\n      type: FETCH_TODO_LIST,\n      payload\n    });\n    yield put(hideLoader(false));\n  } catch (e) {\n    yield put(showAlert(\"Something went wrong!!!\"));\n    yield put(hideLoader(false));\n  }\n}\n\nconst fetchTodoList = () => {\n  const userData = JSON.parse(localStorage.getItem('userData'));\n  return axios.get('http://localhost:5000/todo-list', {\n    headers: {\n      \"Authorization\": `Bearer ${userData.token}`\n    }\n  }).then(res => res.data).then(res => res.map(todo => ({\n    label: todo.label,\n    important: todo.important,\n    done: todo.done,\n    todoCreatedAt: todo.todoCreatedAt,\n    key: todo.key\n  }))); // return fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9')\n  //     .then(response => response.json())\n  //     .then(json => json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id})))\n};","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/store/sagas/saga-watcher.js"],"names":["takeEvery","put","call","axios","FETCH_TODO_LIST","REQUEST_TODO_LIST","hideLoader","showLoader","showAlert","sagaWatcher","sagaWorker","payload","fetchTodoList","type","e","userData","JSON","parse","localStorage","getItem","get","headers","token","then","res","data","map","todo","label","important","done","todoCreatedAt","key"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,QAAiD,mBAAjD;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mBAArC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC3B,QAAMT,SAAS,CAACK,iBAAD,EAAoBK,UAApB,CAAf;AACH;;AAED,UAAUA,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMT,GAAG,CAACM,UAAU,CAAC,IAAD,CAAX,CAAT;AACA,UAAMI,OAAO,GAAG,MAAMT,IAAI,CAACU,aAAD,CAA1B;AACA,UAAMX,GAAG,CAAC;AAACY,MAAAA,IAAI,EAAET,eAAP;AAAwBO,MAAAA;AAAxB,KAAD,CAAT;AACA,UAAMV,GAAG,CAACK,UAAU,CAAC,KAAD,CAAX,CAAT;AACH,GALD,CAKE,OAAOQ,CAAP,EAAU;AACR,UAAMb,GAAG,CAACO,SAAS,CAAC,yBAAD,CAAV,CAAT;AACA,UAAMP,GAAG,CAACK,UAAU,CAAC,KAAD,CAAX,CAAT;AACH;AACJ;;AAED,MAAMM,aAAa,GAAG,MAAM;AACxB,QAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AAEA,SAAOhB,KAAK,CAACiB,GAAN,CACH,iCADG,EACgC;AAAEC,IAAAA,OAAO,EAAE;AAAC,uBAAmB,UAASN,QAAQ,CAACO,KAAM;AAA5C;AAAX,GADhC,EAEFC,IAFE,CAEGC,GAAG,IAAIA,GAAG,CAACC,IAFd,EAGFF,IAHE,CAGGC,GAAG,IAAIA,GAAG,CAACE,GAAJ,CAAQC,IAAI,KACrB;AACIC,IAAAA,KAAK,EAAED,IAAI,CAACC,KADhB;AAEIC,IAAAA,SAAS,EAAEF,IAAI,CAACE,SAFpB;AAGIC,IAAAA,IAAI,EAAEH,IAAI,CAACG,IAHf;AAIIC,IAAAA,aAAa,EAAEJ,IAAI,CAACI,aAJxB;AAKIC,IAAAA,GAAG,EAAEL,IAAI,CAACK;AALd,GADqB,CAAZ,CAHV,CAAP,CAHwB,CAcxB;AACA;AACA;AACH,CAjBD","sourcesContent":["import {takeEvery, put, call} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {FETCH_TODO_LIST, REQUEST_TODO_LIST} from \"../../store/types\";\r\nimport {hideLoader, showLoader} from \"../loader/actions\";\r\nimport {showAlert} from \"../alert/actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(REQUEST_TODO_LIST, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n    try {\r\n        yield put(showLoader(true));\r\n        const payload = yield call(fetchTodoList);\r\n        yield put({type: FETCH_TODO_LIST, payload});\r\n        yield put(hideLoader(false));\r\n    } catch (e) {\r\n        yield put(showAlert(\"Something went wrong!!!\"));\r\n        yield put(hideLoader(false));\r\n    }\r\n}\r\n\r\nconst fetchTodoList = () => {\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    return axios.get(\r\n        'http://localhost:5000/todo-list', { headers: {\"Authorization\" : `Bearer ${userData.token}`} })\r\n        .then(res => res.data)\r\n        .then(res => res.map(todo => (\r\n            {\r\n                label: todo.label,\r\n                important: todo.important,\r\n                done: todo.done,\r\n                todoCreatedAt: todo.todoCreatedAt,\r\n                key: todo.key\r\n            })))\r\n    // return fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9')\r\n    //     .then(response => response.json())\r\n    //     .then(json => json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id})))\r\n};\r\n"]},"metadata":{},"sourceType":"module"}