{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, FETCH_TODO_LIST, REQUEST_TODO_LIST, UPDATE_TODO_DONE, UPDATE_TODO_IMPORTANT, UPDATE_TODO_LABEL } from \"../types\";\nimport { hideLoader, showLoader } from \"../loader/actions\";\nimport { showAlert } from \"../alert/actions\";\nexport const setNewTodo = todo => {\n  return {\n    type: ADD_TODO,\n    payload: todo\n  };\n};\nexport const deleteTodo = todo => {\n  return {\n    type: DELETE_TODO,\n    payload: todo\n  };\n};\nexport const updateTodoLabel = (label, key) => {\n  return {\n    type: UPDATE_TODO_LABEL,\n    payload: label,\n    key: key\n  };\n};\nexport const updateTodoDone = (todo, key) => {\n  return {\n    type: UPDATE_TODO_DONE,\n    payload: todo,\n    key: key\n  };\n};\nexport const updateTodoImportant = (todo, key) => {\n  return {\n    type: UPDATE_TODO_IMPORTANT,\n    payload: todo,\n    key: key\n  };\n};\nexport const requestTodoList = () => {\n  return {\n    type: REQUEST_TODO_LIST\n  };\n}; // export const fetchTodoList = () => {\n//     return async dispatch => {\n//         try {\n//             dispatch(showLoader(true));\n//             const response = await fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9');\n//             const json = await response.json();\n//             const todoList = await json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id}));\n//             setTimeout(() => {\n//                 dispatch({type: FETCH_TODO_LIST, payload: todoList});\n//                 dispatch(hideLoader(false));\n//             },2000);\n//         }catch (e) {\n//             dispatch(showAlert(\"Something went wrong!!!\"));\n//             dispatch(hideLoader(false))\n//         }\n//     }\n// };","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/store/todo-list/actions.js"],"names":["ADD_TODO","DELETE_TODO","FETCH_TODO_LIST","REQUEST_TODO_LIST","UPDATE_TODO_DONE","UPDATE_TODO_IMPORTANT","UPDATE_TODO_LABEL","hideLoader","showLoader","showAlert","setNewTodo","todo","type","payload","deleteTodo","updateTodoLabel","label","key","updateTodoDone","updateTodoImportant","requestTodoList"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,iBAJJ,EAKIC,gBALJ,EAMIC,qBANJ,EAM2BC,iBAN3B,QAOO,UAPP;AAQA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mBAArC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAEZ,QADJ;AAEFa,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAGH,IAAI,IAAI;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAEX,WADJ;AAEFY,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC7C,SAAM;AACFL,IAAAA,IAAI,EAAEN,iBADJ;AAEFO,IAAAA,OAAO,EAAEG,KAFP;AAGFC,IAAAA,GAAG,EAAEA;AAHH,GAAN;AAKD,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,CAACP,IAAD,EAAOM,GAAP,KAAe;AACzC,SAAM;AACFL,IAAAA,IAAI,EAAER,gBADJ;AAEFS,IAAAA,OAAO,EAAEF,IAFP;AAGFM,IAAAA,GAAG,EAAEA;AAHH,GAAN;AAKH,CANM;AAQP,OAAO,MAAME,mBAAmB,GAAG,CAACR,IAAD,EAAOM,GAAP,KAAe;AAC9C,SAAM;AACFL,IAAAA,IAAI,EAAEP,qBADJ;AAEFQ,IAAAA,OAAO,EAAEF,IAFP;AAGFM,IAAAA,GAAG,EAAEA;AAHH,GAAN;AAKH,CANM;AAQP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACnC,SAAO;AACHR,IAAAA,IAAI,EAAET;AADH,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    FETCH_TODO_LIST,\r\n    REQUEST_TODO_LIST,\r\n    UPDATE_TODO_DONE,\r\n    UPDATE_TODO_IMPORTANT, UPDATE_TODO_LABEL\r\n} from \"../types\";\r\nimport {hideLoader, showLoader} from \"../loader/actions\";\r\nimport {showAlert} from \"../alert/actions\";\r\n\r\nexport const setNewTodo = todo => {\r\n    return{\r\n        type: ADD_TODO,\r\n        payload: todo\r\n    }\r\n};\r\n\r\nexport const deleteTodo = todo => {\r\n    return{\r\n        type: DELETE_TODO,\r\n        payload: todo\r\n    }\r\n};\r\n\r\nexport const updateTodoLabel = (label, key) => {\r\n  return{\r\n      type: UPDATE_TODO_LABEL,\r\n      payload: label,\r\n      key: key\r\n  }\r\n};\r\n\r\nexport const updateTodoDone = (todo, key) => {\r\n    return{\r\n        type: UPDATE_TODO_DONE,\r\n        payload: todo,\r\n        key: key\r\n    }\r\n};\r\n\r\nexport const updateTodoImportant = (todo, key) => {\r\n    return{\r\n        type: UPDATE_TODO_IMPORTANT,\r\n        payload: todo,\r\n        key: key\r\n    }\r\n};\r\n\r\nexport const requestTodoList = () => {\r\n  return {\r\n      type: REQUEST_TODO_LIST,\r\n  }\r\n};\r\n\r\n// export const fetchTodoList = () => {\r\n//     return async dispatch => {\r\n//         try {\r\n//             dispatch(showLoader(true));\r\n//             const response = await fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9');\r\n//             const json = await response.json();\r\n//             const todoList = await json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id}));\r\n//             setTimeout(() => {\r\n//                 dispatch({type: FETCH_TODO_LIST, payload: todoList});\r\n//                 dispatch(hideLoader(false));\r\n//             },2000);\r\n//         }catch (e) {\r\n//             dispatch(showAlert(\"Something went wrong!!!\"));\r\n//             dispatch(hideLoader(false))\r\n//         }\r\n//     }\r\n// };"]},"metadata":{},"sourceType":"module"}