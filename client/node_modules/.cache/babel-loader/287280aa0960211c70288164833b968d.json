{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, FETCH_TODO_LIST, UPDATE_TODO_DONE, UPDATE_TODO_IMPORTANT, UPDATE_TODO_LABEL } from \"../types\"; // const defaultState = {\n//     todoList: [\n//         {\n//             label: \"Drink some coffee\",\n//             important: false,\n//             done: true,\n//             id: 1\n//         },\n//         {\n//             label: \"Drink any milk\",\n//             important: false,\n//             done: false,\n//             id: 2\n//         },\n//         {\n//             label: \"Go to the cinema\",\n//             important: false,\n//             done: false,\n//             id: 3\n//         }\n//     ]\n// };\n\nconst defaultState = {\n  todoList: []\n};\nexport const todoListReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return { ...state,\n        todoList: [...state.todoList, action.payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todoList: action.payload\n      };\n\n    case UPDATE_TODO_LABEL:\n      return { ...state,\n        todoList: state.todoList.map(todo => {\n          if (todo.key === action.key) return { ...todo,\n            label: action.payload\n          };\n          return todo;\n        })\n      };\n\n    case UPDATE_TODO_DONE:\n      return { ...state,\n        todoList: state.todoList.map(todo => {\n          if (todo.key === action.key) return { ...todo,\n            done: !todo.done\n          };\n          return todo;\n        })\n      };\n\n    case UPDATE_TODO_IMPORTANT:\n      return { ...state,\n        todoList: state.todoList.map(todo => {\n          if (todo.key === action.key) return { ...todo,\n            important: !todo.important\n          };\n          return todo;\n        })\n      };\n\n    case FETCH_TODO_LIST:\n      return { ...state,\n        todoList: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/store/todo-list/reducer.js"],"names":["ADD_TODO","DELETE_TODO","FETCH_TODO_LIST","UPDATE_TODO_DONE","UPDATE_TODO_IMPORTANT","UPDATE_TODO_LABEL","defaultState","todoList","todoListReducer","state","action","type","payload","map","todo","key","label","done","important"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,gBAJJ,EAKIC,qBALJ,EAMIC,iBANJ,QAOO,UAPP,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAMA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,QAAL;AACI,aAAO,EACH,GAAGS,KADA;AACOF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACE,OAA3B;AADjB,OAAP;;AAGJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGQ,KADA;AACOF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AADxB,OAAP;;AAGJ,SAAKP,iBAAL;AACI,aAAO,EACH,GAAGI,KADA;AACOF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,GAAf,CAAmBC,IAAI,IAAI;AAC3C,cAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACK,GAAxB,EAA6B,OAAO,EAAC,GAAGD,IAAJ;AAAUE,YAAAA,KAAK,EAAEN,MAAM,CAACE;AAAxB,WAAP;AAC7B,iBAAOE,IAAP;AACH,SAHmB;AADjB,OAAP;;AAMJ,SAAKX,gBAAL;AACI,aAAO,EACH,GAAGM,KADA;AACOF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,GAAf,CAAmBC,IAAI,IAAI;AAC3C,cAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACK,GAAxB,EAA6B,OAAO,EAAC,GAAGD,IAAJ;AAAUG,YAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAAtB,WAAP;AAC7B,iBAAOH,IAAP;AACH,SAHmB;AADjB,OAAP;;AAMJ,SAAKV,qBAAL;AACI,aAAO,EACH,GAAGK,KADA;AACOF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeM,GAAf,CAAmBC,IAAI,IAAI;AAC3C,cAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACK,GAAxB,EAA6B,OAAO,EAAC,GAAGD,IAAJ;AAAUI,YAAAA,SAAS,EAAE,CAACJ,IAAI,CAACI;AAA3B,WAAP;AAC7B,iBAAOJ,IAAP;AACH,SAHmB;AADjB,OAAP;;AAMJ,SAAKZ,eAAL;AACI,aAAO,EACH,GAAGO,KADA;AACOF,QAAAA,QAAQ,EAAEG,MAAM,CAACE;AADxB,OAAP;;AAGJ;AACI,aAAOH,KAAP;AAnCR;AAqCH,CAtCM","sourcesContent":["import {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    FETCH_TODO_LIST,\r\n    UPDATE_TODO_DONE,\r\n    UPDATE_TODO_IMPORTANT,\r\n    UPDATE_TODO_LABEL\r\n} from \"../types\";\r\n\r\n// const defaultState = {\r\n//     todoList: [\r\n//         {\r\n//             label: \"Drink some coffee\",\r\n//             important: false,\r\n//             done: true,\r\n//             id: 1\r\n//         },\r\n//         {\r\n//             label: \"Drink any milk\",\r\n//             important: false,\r\n//             done: false,\r\n//             id: 2\r\n//         },\r\n//         {\r\n//             label: \"Go to the cinema\",\r\n//             important: false,\r\n//             done: false,\r\n//             id: 3\r\n//         }\r\n//     ]\r\n// };\r\n\r\nconst defaultState = {\r\n    todoList: []\r\n};\r\n\r\n\r\n\r\nexport const todoListReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return {\r\n                ...state, todoList: [...state.todoList, action.payload]\r\n            };\r\n        case DELETE_TODO:\r\n            return {\r\n                ...state, todoList: action.payload\r\n            };\r\n        case UPDATE_TODO_LABEL:\r\n            return {\r\n                ...state, todoList: state.todoList.map(todo => {\r\n                    if (todo.key === action.key) return {...todo, label: action.payload};\r\n                    return todo\r\n                })\r\n            };\r\n        case UPDATE_TODO_DONE:\r\n            return {\r\n                ...state, todoList: state.todoList.map(todo => {\r\n                    if (todo.key === action.key) return {...todo, done: !todo.done};\r\n                    return todo\r\n                })\r\n            };\r\n        case UPDATE_TODO_IMPORTANT:\r\n            return {\r\n                ...state, todoList: state.todoList.map(todo => {\r\n                    if (todo.key === action.key) return {...todo, important: !todo.important};\r\n                    return todo\r\n                })\r\n            };\r\n        case FETCH_TODO_LIST:\r\n            return {\r\n                ...state, todoList: action.payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}