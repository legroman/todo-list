{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, FETCH_TODO_LIST, UPDATE_TODO_DONE, UPDATE_TODO_IMPORTANT } from \"../types\";\nimport { hideLoader, showLoader } from \"../loader/actions\";\nimport { showAlert } from \"../alert/actions\";\nexport const setNewTodo = todo => {\n  return {\n    type: ADD_TODO,\n    payload: todo\n  };\n};\nexport const deleteTodo = todo => {\n  return {\n    type: DELETE_TODO,\n    payload: todo\n  };\n};\nexport const updateTodoDone = (todo, id) => {\n  return {\n    type: UPDATE_TODO_DONE,\n    payload: todo,\n    id: id\n  };\n};\nexport const updateTodoImportant = (todo, id) => {\n  return {\n    type: UPDATE_TODO_IMPORTANT,\n    payload: todo,\n    id: id\n  };\n};\nexport const fetchTodoList = () => {\n  return async dispatch => {\n    try {\n      dispatch(showLoader(true));\n      const response = await fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9');\n      const json = await response.json();\n      const todoList = await json.map(todo => ({\n        label: todo.title,\n        important: false,\n        done: todo.completed,\n        id: todo.id\n      }));\n      setTimeout(() => {\n        dispatch({\n          type: FETCH_TODO_LIST,\n          payload: todoList\n        });\n        dispatch(hideLoader(false));\n      }, 2000);\n    } catch (e) {\n      dispatch(showAlert(\"Something went wrong!!!\"));\n      dispatch(hideLoader(false));\n    }\n  };\n};","map":{"version":3,"sources":["D:/JsReactProjects/test-todo/src/store/todo-list/actions.js"],"names":["ADD_TODO","DELETE_TODO","FETCH_TODO_LIST","UPDATE_TODO_DONE","UPDATE_TODO_IMPORTANT","hideLoader","showLoader","showAlert","setNewTodo","todo","type","payload","deleteTodo","updateTodoDone","id","updateTodoImportant","fetchTodoList","dispatch","response","fetch","json","todoList","map","label","title","important","done","completed","setTimeout","e"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,EAA+BC,eAA/B,EAAgDC,gBAAhD,EAAkEC,qBAAlE,QAA8F,UAA9F;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mBAArC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAGC,IAAI,IAAI;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAEV,QADJ;AAEFW,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMG,UAAU,GAAGH,IAAI,IAAI;AAC9B,SAAM;AACFC,IAAAA,IAAI,EAAET,WADJ;AAEFU,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM;AAOP,OAAO,MAAMI,cAAc,GAAG,CAACJ,IAAD,EAAOK,EAAP,KAAc;AACxC,SAAM;AACFJ,IAAAA,IAAI,EAAEP,gBADJ;AAEFQ,IAAAA,OAAO,EAAEF,IAFP;AAGFK,IAAAA,EAAE,EAAEA;AAHF,GAAN;AAKH,CANM;AAQP,OAAO,MAAMC,mBAAmB,GAAG,CAACN,IAAD,EAAOK,EAAP,KAAc;AAC7C,SAAM;AACFJ,IAAAA,IAAI,EAAEN,qBADJ;AAEFO,IAAAA,OAAO,EAAEF,IAFP;AAGFK,IAAAA,EAAE,EAAEA;AAHF,GAAN;AAKH,CANM;AAQP,OAAO,MAAME,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACAA,MAAAA,QAAQ,CAACX,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,YAAMC,QAAQ,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASb,IAAI,KAAK;AAACc,QAAAA,KAAK,EAAEd,IAAI,CAACe,KAAb;AAAoBC,QAAAA,SAAS,EAAE,KAA/B;AAAsCC,QAAAA,IAAI,EAAEjB,IAAI,CAACkB,SAAjD;AAA4Db,QAAAA,EAAE,EAAEL,IAAI,CAACK;AAArE,OAAL,CAAb,CAAvB;AACAc,MAAAA,UAAU,CAAC,MAAM;AACbX,QAAAA,QAAQ,CAAC;AAACP,UAAAA,IAAI,EAAER,eAAP;AAAwBS,UAAAA,OAAO,EAAEU;AAAjC,SAAD,CAAR;AACAJ,QAAAA,QAAQ,CAACZ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,OAHS,EAGR,IAHQ,CAAV;AAIH,KATD,CASC,OAAOwB,CAAP,EAAU;AACPZ,MAAAA,QAAQ,CAACV,SAAS,CAAC,yBAAD,CAAV,CAAR;AACAU,MAAAA,QAAQ,CAACZ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAdD;AAeH,CAhBM","sourcesContent":["import {ADD_TODO, DELETE_TODO, FETCH_TODO_LIST, UPDATE_TODO_DONE, UPDATE_TODO_IMPORTANT} from \"../types\";\r\nimport {hideLoader, showLoader} from \"../loader/actions\";\r\nimport {showAlert} from \"../alert/actions\";\r\n\r\nexport const setNewTodo = todo => {\r\n    return{\r\n        type: ADD_TODO,\r\n        payload: todo\r\n    }\r\n};\r\n\r\nexport const deleteTodo = todo => {\r\n    return{\r\n        type: DELETE_TODO,\r\n        payload: todo\r\n    }\r\n};\r\n\r\nexport const updateTodoDone = (todo, id) => {\r\n    return{\r\n        type: UPDATE_TODO_DONE,\r\n        payload: todo,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const updateTodoImportant = (todo, id) => {\r\n    return{\r\n        type: UPDATE_TODO_IMPORTANT,\r\n        payload: todo,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const fetchTodoList = () => {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(showLoader(true));\r\n            const response = await fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9');\r\n            const json = await response.json();\r\n            const todoList = await json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id}));\r\n            setTimeout(() => {\r\n                dispatch({type: FETCH_TODO_LIST, payload: todoList});\r\n                dispatch(hideLoader(false));\r\n            },2000);\r\n        }catch (e) {\r\n            dispatch(showAlert(\"Something went wrong!!!\"));\r\n            dispatch(hideLoader(false))\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}