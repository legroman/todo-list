{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\";\nimport { FETCH_TODO_LIST, REQUEST_TODO_LIST } from \"../../store/types\";\nimport { hideLoader, showLoader } from \"../loader/actions\";\nimport { showAlert } from \"../alert/actions\"; // import {setTodoList} from \"../todo-list/actions\";\n\nexport function* sagaWatcher() {\n  yield takeEvery(REQUEST_TODO_LIST, sagaWorker);\n}\n\nfunction* sagaWorker() {\n  try {\n    yield put(showLoader(true));\n    const payload = yield call(fetchTodoList);\n    yield put({\n      type: FETCH_TODO_LIST,\n      payload\n    });\n    yield put(hideLoader(false));\n  } catch (e) {\n    yield put(showAlert(\"Something went wrong!!!\"));\n    yield put(hideLoader(false));\n  }\n}\n\nconst fetchTodoList = () => {\n  fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9').then(response => response.json()); // const json = await response.json();\n  // return await json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id}));\n};","map":{"version":3,"sources":["D:/JsReactProjects/test-todo/src/store/sagas/saga-watcher.js"],"names":["takeEvery","put","call","FETCH_TODO_LIST","REQUEST_TODO_LIST","hideLoader","showLoader","showAlert","sagaWatcher","sagaWorker","payload","fetchTodoList","type","e","fetch","then","response","json"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,GAAnB,EAAwBC,IAAxB,QAAmC,oBAAnC;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,QAAiD,mBAAjD;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mBAArC;AACA,SAAQC,SAAR,QAAwB,kBAAxB,C,CAEA;;AAEA,OAAO,UAAUC,WAAV,GAAwB;AAC3B,QAAMR,SAAS,CAACI,iBAAD,EAAoBK,UAApB,CAAf;AACH;;AAED,UAAUA,UAAV,GAAuB;AACnB,MAAI;AACA,UAAMR,GAAG,CAACK,UAAU,CAAC,IAAD,CAAX,CAAT;AACA,UAAMI,OAAO,GAAG,MAAMR,IAAI,CAACS,aAAD,CAA1B;AACA,UAAMV,GAAG,CAAC;AAACW,MAAAA,IAAI,EAAET,eAAP;AAAwBO,MAAAA;AAAxB,KAAD,CAAT;AACA,UAAMT,GAAG,CAACI,UAAU,CAAC,KAAD,CAAX,CAAT;AACH,GALD,CAKE,OAAOQ,CAAP,EAAU;AACR,UAAMZ,GAAG,CAACM,SAAS,CAAC,yBAAD,CAAV,CAAT;AACA,UAAMN,GAAG,CAACI,UAAU,CAAC,KAAD,CAAX,CAAT;AACH;AACJ;;AAED,MAAMM,aAAa,GAAG,MAAM;AACpBG,EAAAA,KAAK,CAAC,sDAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EADoB,CAIpB;AACA;AACP,CAND","sourcesContent":["import {takeEvery, put, call} from \"redux-saga/effects\";\r\nimport {FETCH_TODO_LIST, REQUEST_TODO_LIST} from \"../../store/types\";\r\nimport {hideLoader, showLoader} from \"../loader/actions\";\r\nimport {showAlert} from \"../alert/actions\";\r\n\r\n// import {setTodoList} from \"../todo-list/actions\";\r\n\r\nexport function* sagaWatcher() {\r\n    yield takeEvery(REQUEST_TODO_LIST, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n    try {\r\n        yield put(showLoader(true));\r\n        const payload = yield call(fetchTodoList);\r\n        yield put({type: FETCH_TODO_LIST, payload});\r\n        yield put(hideLoader(false));\r\n    } catch (e) {\r\n        yield put(showAlert(\"Something went wrong!!!\"));\r\n        yield put(hideLoader(false));\r\n    }\r\n}\r\n\r\nconst fetchTodoList = () => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos/?_limit=9')\r\n            .then(response => response.json());\r\n\r\n        // const json = await response.json();\r\n        // return await json.map(todo => ({label: todo.title, important: false, done: todo.completed, id: todo.id}));\r\n};"]},"metadata":{},"sourceType":"module"}