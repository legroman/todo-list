{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\components\\\\register-form\\\\Register-form-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { RegisterForm } from \"./Register-form\";\nimport { setNewTodo } from \"../../store/todo-list/actions\";\nimport { setRegisterForm, setLabelKey } from \"../../store/register-form/actions\";\nimport { updateTodoLabel } from \"../../store/todo-list/actions\";\n\nclass RegisterFormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setDate = () => {\n      const date = new Date();\n      const day = date.getDate() < 10 ? `0${date.getDay()}` : date.getDate();\n      const month = date.getMonth() < 10 ? `0${date.getMonth()}` : date.getMonth();\n      const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\n      const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\n      return `${day}-${month}-${date.getFullYear()} ${hours}:${minutes}`;\n    };\n\n    this.handleChange = event => this.props.setRegisterForm(event);\n\n    this.handleSubmit = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        if (this.props.updateKey) {\n          const [todo] = this.props.todoList.filter(todo => todo.key === this.props.updateKey);\n          this.props.updateTodoLabel(this.props.form, todo.key);\n          const updatedTodo = {\n            label: this.props.form,\n            important: todo.important,\n            done: todo.done,\n            todoCreatedAt: todo.todoCreatedAt,\n            key: todo.key\n          };\n          axios.post('/api/todo-list/update/label', updatedTodo).then(res => console.log(res.data)).catch(err => console.log(err.message));\n          this.props.setLabelKey(0);\n          this.props.setRegisterForm('');\n          return;\n        }\n\n        const newTodo = {\n          label: this.props.form,\n          important: false,\n          done: false,\n          todoCreatedAt: this.setDate(),\n          key: Date.now()\n        };\n        if (newTodo.label && newTodo.label.length < 110) this.props.setNewTodo(newTodo);\n        this.props.setRegisterForm('');\n        const userData = JSON.parse(localStorage.getItem('userData'));\n        axios.post('/api/todo-list/add', newTodo, {\n          headers: {\n            \"Authorization\": `Bearer ${userData.token}`\n          }\n        }).then(res => console.log(res.data)).catch(err => window.M.toast({\n          html: err.response.data.message\n        }));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RegisterForm, {\n      onChangeForm: this.handleChange,\n      onSubmitForm: this.handleSubmit,\n      label: this.props.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList,\n    form: state.TodoForm.label,\n    updateKey: state.TodoForm.updateKey\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  setRegisterForm,\n  updateTodoLabel,\n  setLabelKey\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterFormContainer);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/components/register-form/Register-form-container.js"],"names":["React","Component","connect","axios","RegisterForm","setNewTodo","setRegisterForm","setLabelKey","updateTodoLabel","RegisterFormContainer","setDate","date","Date","day","getDate","getDay","month","getMonth","hours","getHours","minutes","getMinutes","getFullYear","handleChange","event","props","handleSubmit","key","preventDefault","updateKey","todo","todoList","filter","form","updatedTodo","label","important","done","todoCreatedAt","post","then","res","console","log","data","catch","err","message","newTodo","now","length","userData","JSON","parse","localStorage","getItem","headers","token","window","M","toast","html","response","render","mapStateToProps","state","TodoForm","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {RegisterForm} from \"./Register-form\";\r\nimport {setNewTodo} from \"../../store/todo-list/actions\";\r\nimport {setRegisterForm, setLabelKey} from \"../../store/register-form/actions\";\r\nimport {updateTodoLabel} from \"../../store/todo-list/actions\";\r\n\r\nclass RegisterFormContainer extends Component {\r\n    setDate = () => {\r\n        const date = new Date();\r\n        const day = date.getDate() < 10 ? `0${date.getDay()}` :date.getDate();\r\n        const month = date.getMonth() < 10 ? `0${date.getMonth()}` :date.getMonth();\r\n        const hours = date.getHours() < 10 ? `0${date.getHours()}` :date.getHours();\r\n        const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` :date.getMinutes();\r\n        return `${day}-${month}-${date.getFullYear()} ${hours}:${minutes}`\r\n    };\r\n\r\n    handleChange = event => this.props.setRegisterForm(event);\r\n\r\n    handleSubmit = event => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n\r\n\r\n            if (this.props.updateKey) {\r\n                const [todo] = this.props.todoList.filter(todo => todo.key === this.props.updateKey);\r\n                this.props.updateTodoLabel(this.props.form, todo.key);\r\n                const updatedTodo = {\r\n                  label: this.props.form,\r\n                  important: todo.important,\r\n                  done: todo.done,\r\n                  todoCreatedAt: todo.todoCreatedAt,\r\n                  key: todo.key\r\n                };\r\n                axios.post('/api/todo-list/update/label', updatedTodo)\r\n                    .then(res => console.log(res.data))\r\n                    .catch(err => console.log(err.message));\r\n                this.props.setLabelKey(0);\r\n                this.props.setRegisterForm('');\r\n                return\r\n            }\r\n\r\n            const newTodo = {\r\n                label: this.props.form,\r\n                important: false,\r\n                done: false,\r\n                todoCreatedAt: this.setDate(),\r\n                key: Date.now()\r\n            };\r\n\r\n            if (newTodo.label && newTodo.label.length < 110) this.props.setNewTodo(newTodo);\r\n\r\n            this.props.setRegisterForm('');\r\n\r\n            const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n            axios.post('/api/todo-list/add', newTodo, {headers: {\"Authorization\": `Bearer ${userData.token}`}})\r\n                .then(res => console.log(res.data))\r\n                .catch(err => window.M.toast({html: err.response.data.message}))\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <RegisterForm\r\n            onChangeForm={this.handleChange}\r\n            onSubmitForm={this.handleSubmit}\r\n            label={this.props.form}\r\n        />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n        form: state.TodoForm.label,\r\n        updateKey: state.TodoForm.updateKey\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    setRegisterForm,\r\n    updateTodoLabel,\r\n    setLabelKey\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterFormContainer);"]},"metadata":{},"sourceType":"module"}