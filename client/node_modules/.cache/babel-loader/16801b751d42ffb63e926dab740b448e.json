{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\test-todo\\\\src\\\\components\\\\todo-list\\\\Todo-list-container.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { TodoList } from \"./Todo-list\";\nimport { setNewTodo, deleteTodo } from \"../../store/todo-list/actions\";\n\nclass TodoListContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.todoList = () => {\n      switch (this.props.filter) {\n        case \"Active\":\n          return this.props.todoList.filter(todo => {\n            // if (!todo.done && this.props.term){\n            //     return todo.label.toLowerCase().indexOf(this.props.term) !== -1\n            // }else\n            //     return !todo.done;\n            if (!this.props.term.length) return !todo.done;\n            return todo.label.toLowerCase().indexOf(this.props.term) !== -1;\n          });\n\n        case \"Done\":\n          return this.props.todoList.filter(todo => todo.done);\n\n        default:\n          return this.props.todoList;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(TodoList, {\n      todoList: this.todoList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList.todoList,\n    filter: state.navigation.filter,\n    term: state.searchForm.term\n  };\n};\n\nconst mapDispatchToProps = {\n  setNewTodo,\n  deleteTodo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);","map":{"version":3,"sources":["D:/JsReactProjects/test-todo/src/components/todo-list/Todo-list-container.js"],"names":["React","Component","connect","TodoList","setNewTodo","deleteTodo","TodoListContainer","todoList","props","filter","todo","term","length","done","label","toLowerCase","indexOf","render","mapStateToProps","state","navigation","searchForm","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,+BAArC;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAAA;AAAA;;AAAA,SACtCM,QADsC,GAC3B,MAAM;AACb,cAAQ,KAAKC,KAAL,CAAWC,MAAnB;AACI,aAAK,QAAL;AACI,iBAAO,KAAKD,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BC,IAAI,IAAI;AACtC;AACA;AACA;AACA;AACA,gBAAI,CAAC,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,MAArB,EAA6B,OAAO,CAACF,IAAI,CAACG,IAAb;AAC7B,mBAAOH,IAAI,CAACI,KAAL,CAAWC,WAAX,GAAyBC,OAAzB,CAAiC,KAAKR,KAAL,CAAWG,IAA5C,MAAsD,CAAC,CAA9D;AACH,WAPM,CAAP;;AAQJ,aAAK,MAAL;AACI,iBAAO,KAAKH,KAAL,CAAWD,QAAX,CAAoBE,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACG,IAAxC,CAAP;;AACJ;AACI,iBAAO,KAAKL,KAAL,CAAWD,QAAlB;AAbR;AAeH,KAjBqC;AAAA;;AAmBtCU,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,QAAD;AACH,MAAA,QAAQ,EAAE,KAAKV,QAAL,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAGH;;AAvBqC;;AA0B1C,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,QAAQ,EAAEY,KAAK,CAACZ,QAAN,CAAeA,QADtB;AAEHE,IAAAA,MAAM,EAAEU,KAAK,CAACC,UAAN,CAAiBX,MAFtB;AAGHE,IAAAA,IAAI,EAAEQ,KAAK,CAACE,UAAN,CAAiBV;AAHpB,GAAP;AAKH,CAND;;AAQA,MAAMW,kBAAkB,GAAG;AACvBlB,EAAAA,UADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeH,OAAO,CAACgB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6ChB,iBAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {TodoList} from \"./Todo-list\";\r\nimport {setNewTodo, deleteTodo} from \"../../store/todo-list/actions\";\r\n\r\nclass TodoListContainer extends Component {\r\n    todoList = () => {\r\n        switch (this.props.filter) {\r\n            case \"Active\":\r\n                return this.props.todoList.filter(todo => {\r\n                    // if (!todo.done && this.props.term){\r\n                    //     return todo.label.toLowerCase().indexOf(this.props.term) !== -1\r\n                    // }else\r\n                    //     return !todo.done;\r\n                    if (!this.props.term.length) return !todo.done;\r\n                    return todo.label.toLowerCase().indexOf(this.props.term) !== -1\r\n                });\r\n            case \"Done\":\r\n                return this.props.todoList.filter(todo => todo.done);\r\n            default:\r\n                return this.props.todoList;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <TodoList\r\n            todoList={this.todoList()}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        todoList: state.todoList.todoList,\r\n        filter: state.navigation.filter,\r\n        term: state.searchForm.term\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setNewTodo,\r\n    deleteTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);"]},"metadata":{},"sourceType":"module"}