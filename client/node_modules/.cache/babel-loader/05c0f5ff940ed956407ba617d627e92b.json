{"ast":null,"code":"var _jsxFileName = \"D:\\\\JsReactProjects\\\\my-todo-list\\\\client\\\\src\\\\components\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { sagaWatcher } from \"../../store/sagas/saga-watcher\";\nimport thunk from \"redux-thunk\";\nimport { connect } from \"react-redux\";\nimport rootReducer from \"../../store/root-reducer\";\nimport { Header } from \"../header/Header\";\nimport NavigationContainer from \"../navigation/Navigation-container\";\nimport TodoListContainer from \"../todo-list/Todo-list-container\";\nimport FormTodoContainer from \"../register-form/Register-form-container\";\nimport './app.css';\nimport { useRoutes } from \"../../routes\";\nimport { setNewTodo } from \"../../store/todo-list/actions\";\nimport { setRegisterForm } from \"../../store/register-form/actions\"; // const store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst saga = createSagaMiddleware();\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk, saga), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nsaga.run(sagaWatcher);\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, useRoutes(false))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["D:/JsReactProjects/my-todo-list/client/src/components/app/App.js"],"names":["React","Component","createStore","compose","applyMiddleware","createSagaMiddleware","Provider","BrowserRouter","Router","sagaWatcher","thunk","connect","rootReducer","Header","NavigationContainer","TodoListContainer","FormTodoContainer","useRoutes","setNewTodo","setRegisterForm","saga","store","window","__REDUX_DEVTOOLS_EXTENSION__","run","App","render","mapStateToProps","state","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,OAArB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,SAAQC,WAAR,QAA0B,gCAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,SAAQC,eAAR,QAA8B,mCAA9B,C,CAEA;;AAEA,MAAMC,IAAI,GAAGf,oBAAoB,EAAjC;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CAACU,WAAD,EAAcT,OAAO,CAC1CC,eAAe,CAACM,KAAD,EAAQU,IAAR,CAD2B,EAE1CE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFG,CAArB,CAAzB;AAKAH,IAAI,CAACI,GAAL,CAASf,WAAT;;AAEA,MAAMgB,GAAN,SAAkBxB,SAAlB,CAA2B;AACvByB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,SAAS,CAAC,KAAD,CADd,CADJ,CADJ,CADJ;AASH;;AAXsB;;AAc3B,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO,EAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,EAA3B;AAIA,eAAelB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {createStore, compose, applyMiddleware} from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport {sagaWatcher} from \"../../store/sagas/saga-watcher\";\nimport thunk from \"redux-thunk\";\nimport {connect} from \"react-redux\";\nimport rootReducer from \"../../store/root-reducer\";\nimport {Header} from \"../header/Header\";\nimport NavigationContainer from \"../navigation/Navigation-container\";\nimport TodoListContainer from \"../todo-list/Todo-list-container\";\nimport FormTodoContainer from \"../register-form/Register-form-container\";\nimport './app.css';\nimport {useRoutes} from \"../../routes\";\nimport {setNewTodo} from \"../../store/todo-list/actions\";\nimport {setRegisterForm} from \"../../store/register-form/actions\";\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(thunk, saga),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n);\n\nsaga.run(sagaWatcher);\n\nclass App extends Component{\n    render() {\n        return (\n            <Router>\n                <div className=\"App container\">\n                    <Provider store={store}>\n                        {useRoutes(false)}\n                    </Provider>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = {\n\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}